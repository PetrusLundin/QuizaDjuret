@page "/"
@using QuizaDjuret.Client.Managers;
@using QuizaDjuret.Client.Services;
@using QuizaDjuret.Shared;
@inject QuizService quizService;
@inject ScoreService scoreService;
@inject IJSRuntime JSRuntime;

<head>
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Almarai&family=Bubblegum+Sans&family=Caveat&family=Cherry+Bomb+One&family=Gochi+Hand&family=Ysabeau+SC:wght@600;700&display=swap" rel="stylesheet">

</head>


@if (GameManager.Questions.Count == 0)
{
	<h1>LOADING...</h1>
	<style>
		body {
			background-image: url('../images/landingpage.jpg');
			background-size: cover;
		}
	</style>
}
else
{
	@if (GameManager.CurrentQuestionNumber == 41)
	{

		<style>
			body {
				background-image: url('../images/landingpage.jpg');
				background-size: cover;
			}
		</style>



		<div class="main-box">



			<h1 style="margin-bottom: 40px; margin-top: 30px;">Välkommen till QuizaDjuret</h1>
			<h2 style="margin-bottom: 45px;">Hur du spelar Quizet:</h2>
			<p>🏆 För varje rätt svar får du poäng som du kan se i höger kolumn</p>
			<p>💡 Tryck på knappen "🔍" för att få en ledtråd till frågan</p>
			<p>💡 Tryck på knappen "Starta om quiz" för att börja om quizet från början</p>


			<h3 style="margin: 40px;">Lycka till!! 🐛</h3>


		</div>
		<div class="start-btn-div">
			<button class="start-btn" @onclick="() => Click()">Starta Quizet</button>
		</div>

	}
	else if (GameManager.CurrentQuestionNumber == 0)
	{
		<style>
			body {
				background-image: url('../images/landingpage.jpg');
				background-size: cover;
			}
		</style>

		<div class="highscore-div">
			<div class="titlediv">
				<p class="flower">
					rrrrr
				</p>
				<p class="p-scoreboardtext">Scoreboard</p>
				<p class="flower">
					rrrr
				</p>
			</div>
			<div class="table-container">
				<table id="scrollable-table" class="highscore-table">
					<thead>
						<tr class="tableheader">
							<th class="th-rk">Ranking</th>
							<th class="th-nm">Namn</th>
							<th class="th-png">Poäng</th>
						</tr>
					</thead>
					@foreach (UserModel user in ScoreManager.GetHighscoreBoard())
					{
						if (user == ScoreManager.CurrentUser)
						{
							<tr>
								<td class="col-rk">
									@(ScoreManager.ScoreBoard.IndexOf(user) + 1).
								</td>
								<td class="col-nm-input">
									<input class="inputhighscore" maxlength="15" id="playerName-input" @oninput="(e) => { playerName = e.Value.ToString(); }" placeholder="SKRIV HÄR..." />
								</td>
								<td class="col-png">
									@user.Score
								</td>
							</tr>
							
						}						
						else
						{
							<tr>
								<td class="col-rk">
									@(ScoreManager.ScoreBoard.IndexOf(user) + 1).
								</td>
								<td class="col-nm">
									@user.Name
								</td>
								<td class="col-png">
									@user.Score
								</td>
							</tr>
						}
					}
				</table>				
			</div>
			<div class="spar-knapp-div">
				<button class="spar-knapp" id="spara-btn" @onclick="() => SubmitScore()">Spara</button>

			</div>
		</div>

		<div class="startomdiv-highscore">
			<button style="font-family: 'Arial'; font-style:italic" class="highscore-startaOm-btn" @onclick="() => Replay()">» Spela Igen «</button>
		</div>
	}
	else

	{
		@if (GameManager.CurrentQuestion.DifficultyLevel == 1)
		{
			<style>
				body {
					background-image: url('../images/bondgård.jpg');
					background-size: cover;
				}
			</style>
		}
		else if (GameManager.CurrentQuestion.DifficultyLevel == 2)
		{
			<style>
				body {
					background-image: url('../images/skog.jpg');
					background-size: cover;
				}
			</style>
		}
		else if (GameManager.CurrentQuestion.DifficultyLevel == 3)
		{
			<style>
				body {
					background-image: url('../images/savann.jpg');
					background-size: cover;
				}
			</style>
		}
		else
		{
			<style>
				body {
					background-image: url('../images/djungel.jpg');
					background-size: cover;
				}
			</style>
		}




		<div class="main-layout">
			<div class="mitten">
				<div class="main-box-frågor">

					<div class="rubrik-box">
						@if (GameManager.CurrentQuestion.DifficultyLevel == 4)
						{
							<h1>Gissa Djuret:</h1>
						}
						else
						{
							<h1 style="margin-bottom: 15px; margin-top: 10px; font-size: 60px;">@GameManager.CurrentQuestion.Text</h1>

						}

					</div>

					<div class="fråge-box">

						<div class="bild-column">

							@if (GameManager.CurrentQuestion.DifficultyLevel == 3)
							{
								<audio controls autoplay @key="@GameManager.CurrentQuestion.QuestionId">
									<source src="/AnimalSounds/@GameManager.CurrentQuestion.MediaURL" />
								</audio>
							}
							else if (GameManager.CurrentQuestion.DifficultyLevel == 4)
							{
								<p>@GameManager.CurrentQuestion.Text.</p>
							}
							else
							{
								<img class="djur-img" src=@GameManager.CurrentQuestion.MediaURL>
							}
						</div>
						<div class="fråge-column">
							<div class="fråge-rad">
								<p @ref="answer1" style="padding: 5px;" class="fråga" @onclick="() => ClickAnswer(GameManager.CurrentQuestion.Answers[0].IsCorrect, answer1)">@GameManager.CurrentQuestion.Answers[0].Text</p>
								<p @ref="answer2" style="padding: 5px;" class="fråga" @onclick="() => ClickAnswer(GameManager.CurrentQuestion.Answers[1].IsCorrect, answer2)">@GameManager.CurrentQuestion.Answers[1].Text</p>
								<p @ref="answer3" style="padding: 5px;" class="fråga" @onclick="() => ClickAnswer(GameManager.CurrentQuestion.Answers[2].IsCorrect, answer3)">@GameManager.CurrentQuestion.Answers[2].Text</p>
							</div>
							<div class="funfact-hint-rad">
								@if (IsHintVisible == false)
								{

									@if (GameManager.isCorrectAnswer)
									{
										<div class="funfact-hint-div" style="border: 3px solid #91DB77; ">
											<p class="fun-hint-rubrik" id="fun-rubrik">🌟Bonusfakta🌟</p>
											<p class="funfact-hint-p">
												@GameManager.CurrentQuestion.FunFact*
											</p>
										</div>

									}
									else
									{
										<button style="padding: 5px; border: none; background-color: transparent; font-size: 40px; font-weight:lighter; color:BLACK; box-shadow: none; margin-top: 30px;" class="fråga" id="visaHint" @onclick="() => ShowHint() ">🔎</button>
									}
								}
								else if (IsHintVisible)
								{
									<div>

										@if (GameManager.isCorrectAnswer)
										{
											<div class="funfact-hint-div" style="border: 3px solid #91DB77;">
												<p class="fun-hint-rubrik" id="fun-rubrik">🌟Bonusfakta🌟</p>
												<p class="funfact-hint-p">
													@GameManager.CurrentQuestion.FunFact

												</p>
											</div>

										}
										else
										{
											<div class="funfact-hint-div" style=" border: 3px solid #00AEFA">

												<p style=" display: flex; justify-content:center; " class="fun-hint-rubrik" id="hint-rubrik">hint🔎</p>

												<p class="funfact-hint-p">@GameManager.CurrentQuestion.Hint</p>
												<button style="padding: 5px; border: none; background-color: transparent;  font-size: 10px;  box-shadow: none; margin-top: 10px;" class="fråga" id="döljHint" @onclick="() => HideHint() ">❌</button>

											</div>
										}
									</div>
								}
							</div>
						</div>
					</div>





				</div>
				@if (GameManager.isCorrectAnswer)
				{

					<div class="nästafråga-btn-div">
						<button class="nästa-btn" @onclick="() => Click()">★ Nästa fråga ★ </button>
					</div>
				}
				else
				{
					<div class="nästafråga-btn-div">
						<button class="nästa-btn" style="visibility: hidden;" @onclick="() => Click()">★ Nästa fråga ★ </button>
					</div>
				}
			</div>
			<div class="höger-kolumn">
				<div class="sb-box">
					<table>
						<p class="p-sb">Dina poäng:</p>
						<h2 class="poäng-h2">@ScoreManager.CurrentUser.Score p</h2>
						<hr>
						<p class="p-sb">Poängtavla</p>
						@foreach (UserModel user in ScoreManager.GetDynamicScoreBoard())
						{
							if (user == ScoreManager.CurrentUser)
							{
								<tr class="player-row">
									<th>
										@(ScoreManager.ScoreBoard.IndexOf(user) + 1).
										@user.Name
									</th>
									<th>
										@user.Score
									</th>
								</tr>
							}
							else if (user.Name == "")
							{
								<tr>
									<hr class="sb-separator-line" />
								</tr>
							}
							else
							{
								<tr class="other-players-row">
									<th>
										@(ScoreManager.ScoreBoard.IndexOf(user) + 1).
										@user.Name
									</th>
									<th>
										@user.Score

									</th>
								</tr>
							}
						}
					</table>

				</div>
				<div class="startaOm-div">
					<button class="startaOm-btn" @onclick="() => Restart()"> Starta om Quizet </button>
				</div>
			</div>
		</div>


	}

}



@code
{
	private ElementReference answer1;
	private ElementReference answer2;
	private ElementReference answer3;
	private bool isStarted = false;
	private string playerName = "";
	public string loading = "Loading...";

	private int questionId = 1;

	private bool IsHintVisible = false;

	protected override async Task OnInitializedAsync()
	{
		GameManager.Questions = await quizService.GetAllAsync();
		ScoreManager.ScoreBoard = await scoreService.GetAllUsersAsync();
		ScoreManager.ScoreBoard.Add(ScoreManager.CurrentUser);
	}

	public async void Click()
	{
		IsHintVisible = false;
		GameManager.isCorrectAnswer = false;
		GameManager.NextQuestion();
		await JSRuntime.InvokeVoidAsync("quizFunctions.resetButtonText");
	}

	public void Restart()
	{
		IsHintVisible = false;
		GameManager.ResetQuiz();
		ScoreManager.ResetCurrentUser();
		playerName = "";
	}
	public void Replay()
	{
		GameManager.ResetQuiz();
		ScoreManager.ResetCurrentUser();
		if (!ScoreManager.ScoreBoard.Contains(ScoreManager.CurrentUser))
		{
			ScoreManager.ScoreBoard.Add(ScoreManager.CurrentUser);
		}
		playerName = "";
	}

	public async void ClickAnswer(bool isCorrect, ElementReference btnRef)
	{
		if (!GameManager.isCorrectAnswer)
		{
			if (isCorrect)
			{
				GameManager.isCorrectAnswer = true;
				await JSRuntime.InvokeVoidAsync("quizFunctions.correctAnswerText", btnRef);
				ScoreManager.Add();
			}
			else
			{
				ScoreManager.ReduceCurrentQuestionPoints();
				await JSRuntime.InvokeVoidAsync("quizFunctions.changeButtonText", btnRef);
			}
		}
	}
	private async void SubmitScore()
	{
		if (!await scoreService.AddUserScore(playerName))
		{
			//Kör JS om ej submit är valid
		}
		else
		{
			await JSRuntime.InvokeVoidAsync("quizFunctions.removeSparaKnapp");
		}
	}

	

	private async Task ScrollToUser()
	{
		await JSRuntime.InvokeVoidAsync("quizFunctions.scrollToUser");
	}



	private void ShowHint()
	{
		IsHintVisible = true;
	}

	private void HideHint()
	{
		IsHintVisible = false;
	}
}